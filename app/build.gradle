/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */
plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "com.google.protobuf" version "0.8.15"
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

def grpcVersion = '1.29.0'
def protoBufVersion = '3.15.7'
def guavaVersion = '30.1.1-jre'
def junitVersion = '5.7.1'
def annotationsApiVersion = "1.3.1"

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    implementation "com.google.guava:guava:${guavaVersion}"
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile "com.google.protobuf:protobuf-java:${protoBufVersion}"
    compileOnly "javax.annotation:javax.annotation-api:${annotationsApiVersion}"
}

application {
    // Define the main class for the application.
    mainClass = 'com.github.akboyd88.server.App'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

protobuf {
    protoc {
        // Download from repositories
        artifact = "com.google.protobuf:protoc:${protoBufVersion}"
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}